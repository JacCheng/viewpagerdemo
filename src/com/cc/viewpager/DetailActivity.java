package com.cc.viewpager;import java.math.BigDecimal;import android.app.Activity;import android.os.Bundle;import android.view.LayoutInflater;import android.view.View;import android.widget.FrameLayout;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.TextView;import com.cc.viewpager.MyHorizontalScrollView.ScrollViewListener;public class DetailActivity extends Activity implements ScrollViewListener {	private MyHorizontalScrollView mHScrollView;	private FrameLayout pageIndicatorLayout;	private LinearLayout mLayout;	private int lastScrollX, currentPosition, eachWidth;	@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		setContentView(R.layout.activity_detail);		mHScrollView = (MyHorizontalScrollView) findViewById(R.id.my_scrollview);		mHScrollView.setOnScrollStateChangedListener(this);		eachWidth = MainActivity.getScreenWidth(this);		mLayout = (LinearLayout) findViewById(R.id.horizontal_scrollview_layout);		pageIndicatorLayout = (FrameLayout) findViewById(R.id.page_indicator_layout);		pageIndicatorLayout.removeAllViews();		mLayout.removeAllViews();		LinearLayout.LayoutParams paras = new LinearLayout.LayoutParams(eachWidth, LinearLayout.LayoutParams.MATCH_PARENT);		for (int i = 0; i < 4; i++) {			View cell = LayoutInflater.from(this).inflate(R.layout.imageview_cell, null);			cell.setLayoutParams(paras);			final ImageView imageView = (ImageView) cell.findViewById(R.id.imageview);			TextView titleTxt = (TextView) cell.findViewById(R.id.title_txt);			titleTxt.setText(String.format("第%d页", i + 1));			imageView.setImageResource(i % 2 == 0 ? R.drawable.demo_share_img : R.drawable.demo_1);			mLayout.addView(cell);		}	}	@Override	public void onScrollChanged(int scrollStatus) {		if (scrollStatus == ScrollViewListener.IDLE) {			currentPosition = new BigDecimal(String.valueOf(this.lastScrollX / (eachWidth * 1.0f))).setScale(0, BigDecimal.ROUND_HALF_UP).intValue();			mHScrollView.smoothScrollTo(currentPosition * eachWidth, 0);		}	}		@Override	public void onScrollChanged(int l, int t, int oldl, int oldt) {		this.lastScrollX = l;	}}