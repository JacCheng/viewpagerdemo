package com.cc.viewpager;import android.app.Activity;import android.content.Context;import android.os.Bundle;import android.support.v4.view.PagerAdapter;import android.support.v4.view.ViewPager;import android.support.v4.view.ViewPager.OnPageChangeListener;import android.text.Html;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.FrameLayout;import android.widget.ImageView;import android.widget.TextView;public class DetailActivity extends Activity implements OnPageChangeListener {	private ViewPager mImagePager;	private ImagePagerAdapter mPagerAdapter;	private View mHintView;	private TextView mHintTxt;	private int width;	private float maxWidth, offSet;	private boolean isDetailOpened, needIdleOpen;		@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		setContentView(R.layout.activity_detail);		// viewpager 初始大小		width = MainActivity.getScreenWidth(this);		maxWidth = getResources().getDimension(R.dimen.hint_width);		offSet = getResources().getDimension(R.dimen.hint_offset);		mHintView = LayoutInflater.from(this).inflate(R.layout.last_cell, null);		mHintTxt = (TextView) mHintView.findViewById(R.id.hint_txt);		mPagerAdapter = new ImagePagerAdapter(this);		mImagePager = (ViewPager) findViewById(R.id.viewpager);		mImagePager.setAdapter(mPagerAdapter);	}	private void updateImgViewPagerHintText(boolean release){		mHintTxt.setText(Html.fromHtml(String.format("%s<br>To<br>Show<br>Description", release ? "Release" : "Drag")));	}	@Override	public void onPageSelected(int position) {		int count = mPagerAdapter.getCount();		if (count >= 2 && position == count - 1) {			mImagePager.setCurrentItem(count - 2, true);		}	}		@Override	public void onPageScrolled(int position, float arg1, int positionOffsetPixels) {		int lastPosition = mPagerAdapter.getCount() - 2;		if (position == lastPosition) {			needIdleOpen = positionOffsetPixels >= maxWidth;			updateImgViewPagerHintText(needIdleOpen);			if (positionOffsetPixels > maxWidth + offSet && !isDetailOpened) {				isDetailOpened = true;				mImagePager.setCurrentItem(lastPosition, true);				openDesc();			}		}	}		@Override	public void onPageScrollStateChanged(int state) {		if (state == ViewPager.SCROLL_STATE_IDLE) {			if (!isDetailOpened && needIdleOpen) {				openDesc();			}			needIdleOpen = false;			isDetailOpened = false;		}	}		private void openDesc(){		//TODO	}		private class ImagePagerAdapter extends PagerAdapter {				private LayoutInflater mInflater;				public ImagePagerAdapter(Context context) {			this.mInflater = LayoutInflater.from(context);		}		@Override		public Object instantiateItem(ViewGroup container, int position) {			if (position == getCount() - 1) {				((ViewPager) container).addView(mHintView, 0);				return mHintView;			}			View view = mInflater.inflate(R.layout.imageview_cell, null);			final ImageView imageView = (ImageView) view.findViewById(R.id.imageview);			TextView titleTxt = (TextView) view.findViewById(R.id.title_txt);			titleTxt.setText(String.format("第%d页", position + 1));			view.setLayoutParams(new FrameLayout.LayoutParams((int) (width * 0.8f), FrameLayout.LayoutParams.MATCH_PARENT));			imageView.setImageResource(position % 2 == 0 ? R.drawable.demo_1 : R.drawable.demo_share_img);			view.setTag(position);			((ViewPager) container).addView(view, 0);			return view;		}		@Override		public int getCount() {			return 5;		}		@Override		public void destroyItem(ViewGroup container, int position, Object object) {			container.removeView((View) object);		}		@Override		public boolean isViewFromObject(View arg0, Object arg1) {			return arg0 == arg1; 		}		@Override		public int getItemPosition(Object object) {			return super.getItemPosition(object);		}	}}